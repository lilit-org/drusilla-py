name: Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install hatchling --upgrade
        pip install pytest pytest-cov pytest-asyncio

    - name: Validate and load .env.example
      run: |
        # Check if .env.example exists
        if [ ! -f .env.example ]; then
          echo "Error: .env.example file not found"
          exit 1
        fi

        # Validate required variables are present
        required_vars=("SWORD_ERROR_MESSAGE" "RUNCONTEXT_ERROR_MESSAGE" "SHIELD_ERROR_MESSAGE")
        for var in "${required_vars[@]}"; do
          if ! grep -q "^$var=" .env.example; then
            echo "Error: Required variable $var not found in .env.example"
            exit 1
          fi
        done

        # Load .env.example into environment
        while IFS='=' read -r key value; do
          # Skip comments and empty lines
          [[ $key =~ ^#.*$ ]] && continue
          [[ -z $key ]] && continue

          # Remove quotes and export the variable
          value=$(echo "$value" | sed -e 's/^"//' -e 's/"$//')
          echo "$key=$value" >> $GITHUB_ENV
        done < .env.example

    - name: Test with pytest
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/ --cov=src --cov-report=xml
